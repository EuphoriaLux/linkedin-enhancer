window.addEventListener("message",(async e=>{if(console.log("Fetcher received message:",e.data),e.origin!==window.location.origin)return void console.warn("Fetcher received message from unknown origin:",e.origin);const{action:t,feedUrl:r}=e.data;if("fetchRSSFeed"===t&&r)try{console.log(`Fetching RSS feed from: ${r}`);const e=await fetch(r);if(!e.ok)throw new Error(`Network response was not ok: ${e.statusText}`);const t=await e.text(),o=(new DOMParser).parseFromString(t,"application/xml");if(o.querySelector("parsererror"))throw new Error("Error parsing RSS feed XML.");const n=o.querySelector("channel");if(!n)throw new Error("Invalid RSS feed structure.");const i=n.querySelector("title")?.textContent||"No Title",s=n.querySelector("image > url")?.textContent||"",a=n.querySelectorAll("item"),c={title:i,image:s,items:Array.from(a).map((e=>({title:e.querySelector("title")?.textContent||"No Title",link:e.querySelector("link")?.textContent||"",description:e.querySelector("description")?.textContent||"",pubDate:e.querySelector("pubDate")?.textContent||"",thumbnail:e.querySelector("enclosure")?.getAttribute("url")||""})))};console.log("RSS feed fetched and parsed successfully:",c),window.parent.postMessage({action:"rssFeedData",feed:c},window.location.origin)}catch(e){console.error("Error fetching RSS feed:",e),window.parent.postMessage({action:"rssFeedError",error:e.message},window.location.origin)}}));